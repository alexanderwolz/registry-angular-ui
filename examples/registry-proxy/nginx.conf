
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # docker embedded DNS server 
    resolver         127.0.0.11 ipv6=off;

    server {
        listen              8080;
        server_name         localhost;

        location /v2 {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                return 404;
            }

            if ($request_method = "OPTIONS") {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods "OPTIONS, GET, DELETE" always;
                add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization" always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }

            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_set_header    X-Forwarded-Host    $host;
            proxy_set_header    X-Forwarded-Port    $server_port;

            add_header          Access-Control-Allow-Origin $http_origin always;
            add_header          Access-Control-Allow-Methods "OPTIONS, GET, DELETE" always;
            add_header          Access-Control-Allow-Headers "Content-Type, Accept, Authorization" always;
            add_header          Access-Control-Expose-Headers "Docker-Content-Digest, Www-Authenticate, Link" always;
            add_header          Access-Control-Allow-Credentials true always;

            proxy_pass          $REMOTE_REGISTRY;
        }
    }

}
